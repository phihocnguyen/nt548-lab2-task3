apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-gateway-config
  namespace: todo-app
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    
    http {
      upstream auth_service {
        server auth-service:3100;
      }
      
      upstream user_service {
        server user-service:3200;
      }
      
      upstream task_service {
        server task-service:3300;
      }
      
      upstream frontend {
        server frontend-service:80;
      }
      
      server {
        listen 80;
        server_name localhost;
        
        # Auth Service
        location /auth/ {
          proxy_pass http://auth_service/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # User Service
        location /user/ {
          proxy_pass http://user_service/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Task Service
        location /task/ {
          proxy_pass http://task_service/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Frontend
        location / {
          proxy_pass http://frontend/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-gateway
  namespace: todo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-gateway
  template:
    metadata:
      labels:
        app: nginx-gateway
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-gateway-service
  namespace: todo-app
spec:
  type: LoadBalancer
  selector:
    app: nginx-gateway
  ports:
    - name: http
      port: 80
      targetPort: 80 